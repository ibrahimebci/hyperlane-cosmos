syntax = "proto3";
package hyperlane.mailbox.v1;

import "google/api/annotations.proto";

option go_package = "github.com/strangelove-ventures/hyperlane-cosmos/x/mailbox/types";

// Query service for hyperlane mailbox module
service Query {
  // Get current tree metadata
  rpc CurrentTreeMetadata(QueryCurrentTreeMetadataRequest)
      returns (QueryCurrentTreeMetadataResponse) {
    option (google.api.http).get = "/hyperlane/mailbox/v1/tree_metadata";
  }

  // Get domain
  rpc Domain(QueryDomainRequest) returns (QueryDomainResponse) {
    option (google.api.http).get = "/hyperlane/mailbox/v1/domain";
  }

  // Get current tree
  rpc CurrentTree(QueryCurrentTreeRequest) returns (QueryCurrentTreeResponse) {
    option (google.api.http).get = "/hyperlane/mailbox/v1/tree";
  }

  // Check if message was delivered
  rpc MsgDelivered(QueryMsgDeliveredRequest)
      returns (QueryMsgDeliveredResponse) {
    option (google.api.http).get = "/hyperlane/mailbox/v1/delivered";
  }

  // Query ISM ID from recipient
  rpc RecipientsIsmId(QueryRecipientsIsmIdRequest)
      returns (QueryRecipientsIsmIdResponse) {
    option (google.api.http).get = "/hyperlane/mailbox/v1/recipients_ism_id";
  }
}

// QueryCurrentTreeMetadataRequest is the request type for the Query/Tree
// metadata RPC method.
message QueryCurrentTreeMetadataRequest {}

// QueryCurrentTreeResponseResponse is the response type for the Query/Tree
// metadata RPC method.
message QueryCurrentTreeMetadataResponse {
  bytes root = 1;
  uint32 count = 2;
}

// QueryCurrentTreeRequest is the request type for the Query/Tree RPC method
message QueryCurrentTreeRequest {}

// QueryCurrentTreeResponse is the response type for the Query/Tree RPC method
message QueryCurrentTreeResponse {
  repeated bytes branches = 1;
  uint32 count = 2;
}

// QueryDomain is the request type for the Query/Domain RPC
// method.
message QueryDomainRequest {}

// QueryDomainResponse is the response type for the Query/Domain RPC method.
message QueryDomainResponse { uint32 domain = 1; }

// QueryMsgDeliveredRequest is the request type to check if message was
// delivered
message QueryMsgDeliveredRequest { bytes message_id = 1; }

// QueryMsgDeliveredResponse is the response type if message was delivered
message QueryMsgDeliveredResponse { bool delivered = 1; }

// QueryRecipientsIsmIdRequest is the request type to get the ISM ID
message QueryRecipientsIsmIdRequest { bytes recipient = 1; }

// QueryRecipientsIsmIdResponse is the response type containing the ISM ID
message QueryRecipientsIsmIdResponse { uint32 ism_id = 1; }