syntax = "proto3";

package hyperlane.mailbox.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/strangelove-ventures/hyperlane-cosmos/x/mailbox/types";

// Msg defines the hyperlane mailbox Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Dispatch sends interchain messages
  rpc Dispatch(MsgDispatch) returns (MsgDispatchResponse);
  // Process delivers interchain messages
  rpc Process(MsgProcess) returns (MsgProcessResponse);
  // SetDefaultIsm defines a rpc handler method for MsgSetDefaultIsm.
  rpc SetDefaultIsm(MsgSetDefaultIsm) returns (MsgSetDefaultIsmResponse);
}

// MsgDispatch defines the request type for the Dispatch rpc.
message MsgDispatch {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "hyperlane-cosmos/MsgDispatch";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  uint32 destination_domain = 2;
  string recipient_address = 3;
  string message_body = 4;
}

// MsgDispatchResponse defines the Dispatch response type.
message MsgDispatchResponse { string message_id = 1; }

// MsgProcess defines the request type for the Process rpc.
message MsgProcess {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "hyperlane-cosmos/MsgProcess";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string metadata = 2;
  string message = 3;
}

// MsgProcessResponse defines the Process response type.
message MsgProcessResponse {}

// MsgSetDefaultIsm defines the request type for the SetDefaultIsm rpc.
message MsgSetDefaultIsm {
  string signer = 1;
  string ism_hash = 2;
}

// MsgSetDefaultIsmResponse defines the Msg/SetDefaultIsm response type
message MsgSetDefaultIsmResponse {}
