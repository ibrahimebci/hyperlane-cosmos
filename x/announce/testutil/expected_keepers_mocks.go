// Code generated by MockGen. DO NOT EDIT.
// Source: x/announce/types/expected_keepers.go
//
// Generated by this command:
//
//	mockgen -source=x/announce/types/expected_keepers.go -package testutil -destination x/announce/testutil/expected_keepers_mocks.go
//
// Package testutil is a generated GoMock package.
package testutil

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMailboxKeeper is a mock of MailboxKeeper interface.
type MockMailboxKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockMailboxKeeperMockRecorder
}

// MockMailboxKeeperMockRecorder is the mock recorder for MockMailboxKeeper.
type MockMailboxKeeperMockRecorder struct {
	mock *MockMailboxKeeper
}

// NewMockMailboxKeeper creates a new mock instance.
func NewMockMailboxKeeper(ctrl *gomock.Controller) *MockMailboxKeeper {
	mock := &MockMailboxKeeper{ctrl: ctrl}
	mock.recorder = &MockMailboxKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMailboxKeeper) EXPECT() *MockMailboxKeeperMockRecorder {
	return m.recorder
}

// GetDomain mocks base method.
func (m *MockMailboxKeeper) GetDomain(arg0 context.Context) uint32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDomain", arg0)
	ret0, _ := ret[0].(uint32)
	return ret0
}

// GetDomain indicates an expected call of GetDomain.
func (mr *MockMailboxKeeperMockRecorder) GetDomain(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDomain", reflect.TypeOf((*MockMailboxKeeper)(nil).GetDomain), arg0)
}

// GetMailboxAddress mocks base method.
func (m *MockMailboxKeeper) GetMailboxAddress() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMailboxAddress")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// GetMailboxAddress indicates an expected call of GetMailboxAddress.
func (mr *MockMailboxKeeperMockRecorder) GetMailboxAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMailboxAddress", reflect.TypeOf((*MockMailboxKeeper)(nil).GetMailboxAddress))
}
