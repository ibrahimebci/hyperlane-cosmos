// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hyperlane/announce/v1/types.proto

package types

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Helper type for Hyperlane's getAnnouncedStorageLocations.
type StorageMetadata struct {
	Metadata []string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *StorageMetadata) Reset()         { *m = StorageMetadata{} }
func (m *StorageMetadata) String() string { return proto.CompactTextString(m) }
func (*StorageMetadata) ProtoMessage()    {}
func (*StorageMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_26474efeff56f239, []int{0}
}

func (m *StorageMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *StorageMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *StorageMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageMetadata.Merge(m, src)
}

func (m *StorageMetadata) XXX_Size() int {
	return m.Size()
}

func (m *StorageMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_StorageMetadata proto.InternalMessageInfo

// Helper type for Hyperlane's Announcement.
type StoredAnnouncement struct {
	// location where signatures will be stored
	StorageLocation string `protobuf:"bytes,1,opt,name=storage_location,json=storageLocation,proto3" json:"storage_location,omitempty"`
}

func (m *StoredAnnouncement) Reset()         { *m = StoredAnnouncement{} }
func (m *StoredAnnouncement) String() string { return proto.CompactTextString(m) }
func (*StoredAnnouncement) ProtoMessage()    {}
func (*StoredAnnouncement) Descriptor() ([]byte, []int) {
	return fileDescriptor_26474efeff56f239, []int{1}
}

func (m *StoredAnnouncement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *StoredAnnouncement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoredAnnouncement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *StoredAnnouncement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredAnnouncement.Merge(m, src)
}

func (m *StoredAnnouncement) XXX_Size() int {
	return m.Size()
}

func (m *StoredAnnouncement) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredAnnouncement.DiscardUnknown(m)
}

var xxx_messageInfo_StoredAnnouncement proto.InternalMessageInfo

// Helper type for Hyperlane's Announcement.
type StoredAnnouncements struct {
	Announcement []*StoredAnnouncement `protobuf:"bytes,1,rep,name=announcement,proto3" json:"announcement,omitempty"`
}

func (m *StoredAnnouncements) Reset()         { *m = StoredAnnouncements{} }
func (m *StoredAnnouncements) String() string { return proto.CompactTextString(m) }
func (*StoredAnnouncements) ProtoMessage()    {}
func (*StoredAnnouncements) Descriptor() ([]byte, []int) {
	return fileDescriptor_26474efeff56f239, []int{2}
}

func (m *StoredAnnouncements) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *StoredAnnouncements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StoredAnnouncements.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *StoredAnnouncements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredAnnouncements.Merge(m, src)
}

func (m *StoredAnnouncements) XXX_Size() int {
	return m.Size()
}

func (m *StoredAnnouncements) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredAnnouncements.DiscardUnknown(m)
}

var xxx_messageInfo_StoredAnnouncements proto.InternalMessageInfo

// Genesis helper type for Hyperlane's Announcement.
type GenesisAnnouncement struct {
	Announcement *StoredAnnouncement `protobuf:"bytes,1,opt,name=announcement,proto3" json:"announcement,omitempty"`
	// The validator (in eth address format) that announced
	Validator []byte `protobuf:"bytes,2,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (m *GenesisAnnouncement) Reset()         { *m = GenesisAnnouncement{} }
func (m *GenesisAnnouncement) String() string { return proto.CompactTextString(m) }
func (*GenesisAnnouncement) ProtoMessage()    {}
func (*GenesisAnnouncement) Descriptor() ([]byte, []int) {
	return fileDescriptor_26474efeff56f239, []int{3}
}

func (m *GenesisAnnouncement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

func (m *GenesisAnnouncement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisAnnouncement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

func (m *GenesisAnnouncement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisAnnouncement.Merge(m, src)
}

func (m *GenesisAnnouncement) XXX_Size() int {
	return m.Size()
}

func (m *GenesisAnnouncement) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisAnnouncement.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisAnnouncement proto.InternalMessageInfo

func init() {
	proto.RegisterType((*StorageMetadata)(nil), "hyperlane.announce.v1.StorageMetadata")
	proto.RegisterType((*StoredAnnouncement)(nil), "hyperlane.announce.v1.StoredAnnouncement")
	proto.RegisterType((*StoredAnnouncements)(nil), "hyperlane.announce.v1.StoredAnnouncements")
	proto.RegisterType((*GenesisAnnouncement)(nil), "hyperlane.announce.v1.GenesisAnnouncement")
}

func init() { proto.RegisterFile("hyperlane/announce/v1/types.proto", fileDescriptor_26474efeff56f239) }

var fileDescriptor_26474efeff56f239 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xb1, 0x4e, 0x02, 0x41,
	0x10, 0x86, 0x6f, 0xd5, 0x18, 0x59, 0x49, 0x30, 0x87, 0x26, 0x84, 0x98, 0x15, 0xa9, 0xa0, 0x60,
	0x37, 0x48, 0x67, 0x87, 0x89, 0xb1, 0x91, 0xe6, 0xec, 0xb4, 0x30, 0xcb, 0x31, 0x39, 0xce, 0xdc,
	0xed, 0x90, 0xdd, 0xe5, 0x22, 0x6f, 0x40, 0xe9, 0x23, 0xf8, 0x38, 0x96, 0x94, 0x96, 0x06, 0x5e,
	0xc4, 0x70, 0xac, 0x20, 0xc1, 0xce, 0x6e, 0xee, 0xcf, 0x3f, 0xdf, 0xff, 0x5f, 0x76, 0xe8, 0xe5,
	0x70, 0x32, 0x02, 0x9d, 0x48, 0x05, 0x42, 0x2a, 0x85, 0x63, 0x15, 0x82, 0xc8, 0xda, 0xc2, 0x4e,
	0x46, 0x60, 0xf8, 0x48, 0xa3, 0x45, 0xff, 0x6c, 0x6d, 0xe1, 0x3f, 0x16, 0x9e, 0xb5, 0xab, 0xa7,
	0x11, 0x46, 0x98, 0x3b, 0xc4, 0x72, 0x5a, 0x99, 0xeb, 0x1d, 0x5a, 0x7a, 0xb0, 0xa8, 0x65, 0x04,
	0x3d, 0xb0, 0x72, 0x20, 0xad, 0xf4, 0xab, 0xf4, 0x28, 0x75, 0x73, 0x85, 0xd4, 0xf6, 0x1b, 0x85,
	0x60, 0xfd, 0x7d, 0x7d, 0x30, 0x7d, 0xbf, 0xf0, 0xea, 0xb7, 0xd4, 0x5f, 0x2e, 0xc1, 0xa0, 0xeb,
	0xf8, 0x29, 0x28, 0xeb, 0x37, 0xe9, 0x89, 0x59, 0xa1, 0x9e, 0x13, 0x0c, 0xa5, 0x8d, 0x51, 0x55,
	0x48, 0x8d, 0x34, 0x0a, 0x41, 0xc9, 0xe9, 0xf7, 0x4e, 0x76, 0x98, 0x17, 0x5a, 0xde, 0xc5, 0x18,
	0xbf, 0x47, 0x8b, 0xf2, 0x97, 0x90, 0x77, 0x38, 0xbe, 0x6a, 0xf2, 0x3f, 0x7f, 0x8b, 0xef, 0x12,
	0x82, 0xad, 0x75, 0x97, 0x35, 0x25, 0xb4, 0x7c, 0x07, 0x0a, 0x4c, 0x6c, 0xb6, 0x4a, 0xef, 0x86,
	0x91, 0x7f, 0x84, 0xf9, 0xe7, 0xb4, 0x90, 0xc9, 0x24, 0x1e, 0x48, 0x8b, 0xba, 0xb2, 0x57, 0x23,
	0x8d, 0x62, 0xb0, 0x11, 0x56, 0x55, 0x6e, 0x9e, 0x3e, 0xe6, 0x8c, 0xcc, 0xe6, 0x8c, 0x7c, 0xcd,
	0x19, 0x79, 0x5b, 0x30, 0x6f, 0xb6, 0x60, 0xde, 0xe7, 0x82, 0x79, 0x8f, 0xdd, 0x28, 0xb6, 0xc3,
	0x71, 0x9f, 0x87, 0x98, 0x0a, 0x63, 0xb5, 0x54, 0x11, 0x24, 0x98, 0x41, 0x2b, 0x03, 0x65, 0xc7,
	0x1a, 0x8c, 0x58, 0xb7, 0x6a, 0x85, 0x68, 0x52, 0x34, 0xe2, 0x75, 0x73, 0x05, 0xf9, 0x09, 0xf4,
	0x0f, 0xf3, 0x67, 0xed, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xd6, 0xdd, 0x09, 0x28, 0x02,
	0x00, 0x00,
}

func (m *StorageMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		for iNdEx := len(m.Metadata) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Metadata[iNdEx])
			copy(dAtA[i:], m.Metadata[iNdEx])
			i = encodeVarintTypes(dAtA, i, uint64(len(m.Metadata[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *StoredAnnouncement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoredAnnouncement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoredAnnouncement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StorageLocation) > 0 {
		i -= len(m.StorageLocation)
		copy(dAtA[i:], m.StorageLocation)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.StorageLocation)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *StoredAnnouncements) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StoredAnnouncements) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StoredAnnouncements) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Announcement) > 0 {
		for iNdEx := len(m.Announcement) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Announcement[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTypes(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GenesisAnnouncement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisAnnouncement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisAnnouncement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Validator) > 0 {
		i -= len(m.Validator)
		copy(dAtA[i:], m.Validator)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Validator)))
		i--
		dAtA[i] = 0x12
	}
	if m.Announcement != nil {
		{
			size, err := m.Announcement.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTypes(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

func (m *StorageMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		for _, s := range m.Metadata {
			l = len(s)
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *StoredAnnouncement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StorageLocation)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *StoredAnnouncements) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Announcement) > 0 {
		for _, e := range m.Announcement {
			l = e.Size()
			n += 1 + l + sovTypes(uint64(l))
		}
	}
	return n
}

func (m *GenesisAnnouncement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Announcement != nil {
		l = m.Announcement.Size()
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Validator)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

func (m *StorageMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = append(m.Metadata, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *StoredAnnouncement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoredAnnouncement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoredAnnouncement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StorageLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *StoredAnnouncements) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StoredAnnouncements: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StoredAnnouncements: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Announcement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Announcement = append(m.Announcement, &StoredAnnouncement{})
			if err := m.Announcement[len(m.Announcement)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func (m *GenesisAnnouncement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisAnnouncement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisAnnouncement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Announcement", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Announcement == nil {
				m.Announcement = &StoredAnnouncement{}
			}
			if err := m.Announcement.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Validator = append(m.Validator[:0], dAtA[iNdEx:postIndex]...)
			if m.Validator == nil {
				m.Validator = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
